{
  "_doc": "Ωmega Spiral design configuration file. This JSON defines the core design system, UI tokens, shader presets, and stage mappings for the game 'Ωmega Spiral - Chapter Zero'. All color values are normalized between 0.0 and 1.0 for easy scaling. Shader parameters are tuned to match the ghost_design_document.md baseline. Use _doc fields for inline documentation to maintain sync with runtime configuration. This file is referenced by scenes, shaders, and UI components for consistent theming.",
  "design_system": {
    "_doc": "Core color palette shared across UI elements, shaders, and narrative threads. Each color includes RGB values (normalized), alpha, and hex for easy reference. These colors represent the game's aesthetic: deep space voids, warm accents, and thread-specific hues for the Dreamweavers. Use these in Godot shaders or UI materials for consistency.",
    "deep_space": {
      "_doc": "Primary background void.",
      "r": 0.054902,
      "g": 0.0666667,
      "b": 0.0862745,
      "a": 1.0,
      "hex": "#0E1116"
    },
    "dark_void": {
      "_doc": "Secondary background for layered panels.",
      "r": 0.05,
      "g": 0.05,
      "b": 0.08,
      "a": 1.0,
      "hex": "#0C0D14"
    },
    "warm_amber": {
      "_doc": "Omega accent glow (primary narrative text).",
      "r": 0.992157,
      "g": 0.788235,
      "b": 0.384314,
      "a": 1.0,
      "hex": "#FEC962"
    },
    "pure_white": {
      "_doc": "Highlight and interface focus state.",
      "r": 1.0,
      "g": 1.0,
      "b": 1.0,
      "a": 1.0,
      "hex": "#FFFFFF"
    },
    "pure_black": {
      "_doc": "Absolute black for masks.",
      "r": 0.0,
      "g": 0.0,
      "b": 0.0,
      "a": 1.0,
      "hex": "#000000"
    },
    "disabled_gray": {
      "_doc": "Used for disabled UI elements (50% opacity).",
      "r": 0.5,
      "g": 0.5,
      "b": 0.5,
      "a": 0.5,
      "hex": "#808080"
    },
    "phosphor_glow": {
      "_doc": "Phosphor overlay layer tint.",
      "r": 1.0,
      "g": 1.0,
      "b": 1.0,
      "a": 0.3,
      "hex": "#FFFFFF",
      "alpha_note": "30% opacity white overlay"
    },
    "scanline_overlay": {
      "_doc": "Scanline overlay tint.",
      "r": 1.0,
      "g": 1.0,
      "b": 1.0,
      "a": 0.18,
      "hex": "#FFFFFF",
      "alpha_note": "18% opacity white overlay"
    },
    "glitch_distortion": {
      "_doc": "Glitch overlay tint.",
      "r": 1.0,
      "g": 1.0,
      "b": 1.0,
      "a": 0.08,
      "hex": "#FFFFFF",
      "alpha_note": "8% opacity white overlay"
    },
    "light_thread": {
      "_doc": "Dreamweaver Light thread (Silver).",
      "r": 0.95,
      "g": 0.95,
      "b": 1.0,
      "a": 1.0,
      "hex": "#F2F2FF"
    },
    "shadow_thread": {
      "_doc": "Dreamweaver Shadow thread (Golden Amber).",
      "r": 1.0,
      "g": 0.75,
      "b": 0.2,
      "a": 1.0,
      "hex": "#FFBF33"
    },
    "ambition_thread": {
      "_doc": "Dreamweaver Ambition thread (Crimson).",
      "r": 0.9,
      "g": 0.15,
      "b": 0.1,
      "a": 1.0,
      "hex": "#E62619"
    }
  },
  "ui_tokens": {
    "_doc": "UI layout and geometry tokens for consistent interface design. These values define spacing, margins, and dimensions used in menus and UI elements. They mirror settings from GameAppConfig and are referenced by scene manifests for responsive design. All values are in pixels or fractions of the screen.",
    "menu": {
      "_doc": "Global menu geometry settings used across stages and scenes. These values ensure consistent button sizing and spacing in UI menus. Stage manifests and UI scripts reference these for layout calculations.",
      "bezel_margin": {
        "_doc": "Content inset from screen edge (fraction).",
        "value": 0.05
      },
      "button_height": {
        "_doc": "Primary button height in pixels.",
        "value": 80
      },
      "button_padding_h": {
        "_doc": "Horizontal padding in pixels.",
        "value": 16
      },
      "button_padding_v": {
        "_doc": "Vertical padding in pixels.",
        "value": 8
      },
      "button_spacing": {
        "_doc": "Spacing between stacked buttons.",
        "value": 16
      }
    },
    "narrative": {
      "_doc": "Narrative text rendering settings for story-driven sequences.",
      "typing_speed": {
        "_doc": "Characters per second for typewriter effect. Lower values evoke struggling/thinking system.",
        "value": 15
      },
      "line_pause": {
        "_doc": "Pause duration in seconds between narrative lines.",
        "value": 0.3
      }
    }
  },
  "shader_presets": {
    "_doc": "Collection of shader material presets and their parameters for various visual effects in Ωmega Spiral. Each preset includes a shader resource path and configurable parameters with defaults tuned to match the ghost_design_document.md baseline. These are used in scene materials for effects like borders, CRT distortions, and backgrounds. Parameters are normalized or in specific units as noted.",
    "spiral_border_base": {
      "_doc": "Default preset for the Omega spiral border frame animation. This shader creates animated energy streams around the screen border. Parameters control rotation, wave properties, and thread intensities for the three Dreamweaver threads (Light, Shadow, Ambition). Used in scene backgrounds for thematic framing.",
      "shader": "res://source/shaders/spiral_border.gdshader",
      "parameters": {
        "_doc": "Uniform defaults are tuned to match ghost_design_document.md baseline.",
        "rotation_speed": { "_doc": "Radians/sec rotation.", "value": 0.05 },
        "wave_speed": { "_doc": "Wave flow speed.", "value": 0.8 },
        "wave_frequency": { "_doc": "Wave density.", "value": 8.0 },
        "wave_amplitude": { "_doc": "Wave height.", "value": 0.25 },
        "border_width": { "_doc": "Thickness as fraction of viewport.", "value": 0.015 },
        "glow_intensity": { "_doc": "Glow multiplier.", "value": 1.2 },
        "thread_separation": { "_doc": "Radians between energy streams.", "value": 2.094 },
        "light_thread_weight": { "_doc": "Intensity scale for Light strand.", "value": 1.0 },
        "shadow_thread_weight": { "_doc": "Intensity scale for Shadow strand.", "value": 1.0 },
        "ambition_thread_weight": { "_doc": "Intensity scale for Ambition strand.", "value": 1.0 }
      }
    },
    "crt_phosphor_base": {
      "_doc": "Baseline phosphor settings (Stage 1 stable).",
      "shader": "res://source/shaders/crt_phosphor.tres",
      "parameters": {
        "phosphor_glow": { "_doc": "Glow multiplier.", "value": 1.2 },
        "phosphor_tint": {
          "_doc": "Warm copper tint (vec3).",
          "x": 0.7725,
          "y": 0.6196,
          "z": 0.3725
        },
        "phosphor_spread": { "_doc": "RGB separation amount.", "value": 1.0 },
        "vignette_strength": { "_doc": "Edge darkening.", "value": 0.3 },
        "vignette_softness": { "_doc": "Vignette softness.", "value": 0.5 },
        "chromatic_aberration": { "_doc": "Edge distortion.", "value": 1.5 },
        "brightness": { "_doc": "Brightness multiplier.", "value": 1.0 },
        "contrast": { "_doc": "Contrast multiplier.", "value": 1.1 }
      }
    },
    "crt_scanlines_base": {
      "_doc": "Baseline scanline movement.",
      "shader": "res://source/shaders/crt_scanlines.tres",
      "parameters": {
        "scanline_opacity": { "_doc": "Intensity of scanlines.", "value": 0.08 },
        "scanline_speed": { "_doc": "Pixels/sec movement.", "value": 5.0 },
        "scanline_count": { "_doc": "Lines on screen.", "value": 400.0 },
        "scanline_thickness": { "_doc": "Line thickness.", "value": 1.2 },
        "scanline_tint": {
          "_doc": "Color tint for scanlines.",
          "color_ref": "design_system.scanline_overlay"
        }
      }
    },
    "crt_glitch_base": {
      "_doc": "Subtle ambient glitches for stable baseline.",
      "shader": "res://source/shaders/crt_glitch.tres",
      "parameters": {
        "glitch_intensity": { "_doc": "0 = clean, 1 = chaos.", "value": 0.0 },
        "interference_speed": { "_doc": "Horizontal wave speed.", "value": 5.0 },
        "chromatic_offset": { "_doc": "RGB separation amount.", "value": 2.0 },
        "block_size": { "_doc": "Block artifact size.", "value": 16.0 },
        "noise_amount": { "_doc": "Static intensity.", "value": 0.1 },
        "displacement_strength": { "_doc": "Horizontal wobble.", "value": 0.02 }
      }
    },
    "pulsing_background_base": {
      "_doc": "Fallback for pulsing background shader.",
      "shader": "res://source/shaders/pulsing_background.gdshader",
      "parameters": {
        "pulse_speed": { "_doc": "Pulse speed.", "value": 0.35 },
        "pulse_strength": { "_doc": "Pulse amplitude.", "value": 0.6 },
        "vignette_radius": { "_doc": "Radius for vignette.", "value": 1.1 },
        "vignette_softness": { "_doc": "Softness factor.", "value": 0.45 },
        "base_color": {
          "_doc": "Background base color.",
          "color_ref": "design_system.dark_void"
        },
        "glow_color": {
          "_doc": "Glow color (thread neutral).",
          "r": 0.2,
          "g": 0.15,
          "b": 0.3,
          "a": 1.0
        }
      }
    },
    "phosphor": {
      "_doc": "Legacy preset: pure green phosphor for fast validation.",
      "shader": "res://source/shaders/crt_phosphor.tres",
      "parameters": {
        "phosphor_color": { "_doc": "Green phosphor tint.", "r": 0.0, "g": 1.0, "b": 0.0, "a": 1.0 },
        "phosphor_intensity": { "_doc": "Glow amount.", "value": 1.2 },
        "scanline_intensity": { "_doc": "Scanline overlay strength.", "value": 0.3 },
        "glow_strength": { "_doc": "Additional glow parameter.", "value": 0.8 }
      }
    },
    "scanlines": {
      "_doc": "Legacy preset: classic CRT scanlines.",
      "shader": "res://source/shaders/crt_scanlines.tres",
      "parameters": {
        "scanline_color": {
          "_doc": "Scanline color (pure black).",
          "color_ref": "design_system.pure_black"
        },
        "scanline_opacity": { "_doc": "Opacity of scanlines.", "value": 0.4 },
        "scanline_spacing": { "_doc": "Spacing modifier.", "value": 2.0 },
        "brightness": { "_doc": "Brightness multiplier.", "value": 1.1 }
      }
    },
    "glitch": {
      "_doc": "Legacy preset: combined glitch overlay.",
      "shader": "res://source/shaders/crt_glitch.tres",
      "parameters": {
        "glitch_intensity": { "_doc": "Glitch intensity.", "value": 0.6 },
        "noise_amount": { "_doc": "Static noise level.", "value": 0.3 },
        "rgb_shift": { "_doc": "RGB separation.", "value": 0.02 },
        "scanline_jitter": { "_doc": "Scanline jitter.", "value": 0.1 }
      }
    },
    "crt": {
      "_doc": "Legacy preset: combined CRT effect.",
      "shader": "res://source/shaders/crt_combined.tres",
      "parameters": {
        "phosphor_color": { "_doc": "Green tint.", "r": 0.0, "g": 1.0, "b": 0.0, "a": 1.0 },
        "phosphor_intensity": { "_doc": "Glow amount.", "value": 1.0 },
        "scanline_intensity": { "_doc": "Scanline amount.", "value": 0.5 },
        "curvature": { "_doc": "Screen curvature.", "value": 0.1 },
        "brightness": { "_doc": "Brightness multiplier.", "value": 1.0 }
      }
    },
    "terminal": {
      "_doc": "Clean CRT terminal (no shader material).",
      "parameters": {}
    },
    "boot_sequence": {
      "_doc": "Stage 1 · Boot sequence glitch (design doc State 1).",
      "shader": "res://source/shaders/crt_glitch.tres",
      "parameters": {
        "glitch_intensity": { "_doc": "Max interference.", "value": 1.0 },
        "scanline_speed": { "_doc": "3x normal speed per doc.", "value": 3.0 },
        "rgb_split": { "_doc": "Design doc 7px separation.", "value": 7.0 },
        "symbol_bleed": { "_doc": "Ancient symbol opacity.", "value": 0.8 },
        "noise_amount": { "_doc": "High static noise.", "value": 0.6 }
      }
    },
    "stable_baseline_glitch_spike": {
      "_doc": "Momentary glitch spike during narrative beats.",
      "shader": "res://source/shaders/crt_glitch.tres",
      "parameters": {
        "glitch_intensity": { "_doc": "Spike to 0.5 for 0.3s.", "value": 0.5 },
        "chromatic_offset": { "_doc": "Slight RGB split.", "value": 2.0 },
        "noise_amount": { "_doc": "Moderate noise.", "value": 0.2 }
      }
    },
    "code_fragment_glitch_overlay": {
      "_doc": "Secret reveal overlay (design doc State 3).",
      "shader": "res://source/shaders/crt_glitch.tres",
      "parameters": {
        "glitch_intensity": { "_doc": "Reality break.", "value": 1.0 },
        "chromatic_offset": { "_doc": "Chromatic aberration 2.0", "value": 2.0 },
        "noise_amount": { "_doc": "Heavy static 0.8.", "value": 0.8 },
        "interference_speed": { "_doc": "Pulse for heartbeat effect.", "value": 15.0 },
        "block_size": { "_doc": "Large block artifacts.", "value": 32.0 }
      }
    },
    "dreamweaver_selection_light": {
      "_doc": "Light thread CRT adjustments.",
      "shader": "res://source/shaders/crt_phosphor.tres",
      "parameters": {
        "phosphor_tint": {
          "_doc": "Warm gold/amber.",
          "color_ref": "design_system.shadow_thread"
        },
        "scanline_intensity": { "_doc": "Cleaner scanlines.", "value": 0.25 },
        "flicker_frequency": { "_doc": "Minimal flicker.", "value": 0.8 },
        "vignette_strength": { "_doc": "Bright edges.", "value": 0.15 },
        "glow_spread": { "_doc": "Soft halo.", "value": 1.4 }
      }
    },
    "dreamweaver_selection_shadow": {
      "_doc": "Shadow thread CRT adjustments.",
      "shader": "res://source/shaders/crt_phosphor.tres",
      "parameters": {
        "phosphor_tint": {
          "_doc": "Deep violet tint.",
          "x": 0.6,
          "y": 0.3,
          "z": 0.8
        },
        "scanline_intensity": { "_doc": "Moderate distortion.", "value": 0.45 },
        "rgb_split": { "_doc": "Reality shimmer.", "value": 1.5 },
        "flicker_frequency": { "_doc": "Nostalgic pulse.", "value": 2.0 },
        "vignette_strength": { "_doc": "Darker edges.", "value": 0.5 }
      }
    },
    "dreamweaver_selection_ambition": {
      "_doc": "Ambition thread CRT adjustments.",
      "shader": "res://source/shaders/crt_phosphor.tres",
      "parameters": {
        "phosphor_tint": {
          "_doc": "Deep red-orange.",
          "color_ref": "design_system.ambition_thread"
        },
        "scanline_intensity": { "_doc": "Aggressive movement.", "value": 0.55 },
        "flicker_frequency": { "_doc": "Calculated urgency.", "value": 3.5 },
        "vignette_strength": { "_doc": "Focused center.", "value": 0.45 },
        "glow_spread": { "_doc": "Sharp edges.", "value": 0.8 }
      }
    }
  },
  "stage_presets": {
    "_doc": "Defines stage-specific visual state mappings to shader preset stacks. Each stage (e.g., ghost_terminal) has states like boot_sequence, stable_baseline, etc., each with a visual_stack of presets applied in order. These stacks ensure consistent progression from initial glitch to stable terminal states. Based on ghost_design_document.md and stage-review docs for accurate visual fidelity.",
    "ghost_terminal": {
      "_doc": "Stage 1: Ghost Terminal visual stacks from ghost_design_document.md. Defines the progression of visual effects for the initial ghost terminal scene, transitioning from heavy glitch to stable states. Each state maps to a stack of shader presets applied in sequence.",
      "states": {
        "boot_sequence": {
          "_doc": "State 1: Heavy glitch introduction.",
          "visual_stack": [
            "crt_phosphor_base",
            "crt_scanlines_base",
            "boot_sequence"
          ]
        },
        "stable_baseline": {
          "_doc": "State 2: Settled terminal baseline.",
          "visual_stack": [
            "crt_phosphor_base",
            "crt_scanlines_base",
            "crt_glitch_base"
          ]
        },
        "secret_reveal": {
          "_doc": "State 3: Code fragment reveal overlay.",
          "visual_stack": [
            "crt_phosphor_base",
            "crt_scanlines_base",
            "code_fragment_glitch_overlay"
          ]
        },
        "dreamweaver_selection": {
          "_doc": "State 4: Thread-specific lock-in (select preset dynamically).",
          "visual_stack": [
            "crt_phosphor_base",
            "crt_scanlines_base"
          ]
        }
      }
    }
  },
  "notes": [
    "All numeric values derived from ghost_design_document.md and stage-review docs.",
    "Shader preset stacks apply from base layers outward (phosphor → scanlines → glitch).",
    "Use _doc fields to keep design documentation in sync with runtime configuration."
  ]
}
